
select distinct [account_name] --, permission_path 
from [dba].[dbo].[FrontOffice_RiskModels_Users_Permissions] 
where  permission_path != 'PINERIVERCAPITA\prc_sql_sysadmin' and account_name not like 'NT %'
and permission_path like '%FrontOffice%'

--DB ROLE assigned to SQL/AD Logins--

/*
Security Audit Report
1) List all access provisioned to a sql user or windows user/group directly 
2) List all access provisioned to a sql user or windows user/group through a database or application role
3) List all access provisioned to the public role

Columns Returned:
UserName        : SQL or Windows/Active Directory user account.  This could also be an Active Directory group.
UserType        : Value will be either 'SQL User' or 'Windows User'.  This reflects the type of user defined for the 
                  SQL Server user account.
DatabaseUserName: Name of the associated user as defined in the database user account.  The database user may not be the
                  same as the server user.
Role            : The role name.  This will be null if the associated permissions to the object are defined at directly
                  on the user account, otherwise this will be the name of the role that the user is a member of.
PermissionType  : Type of permissions the user/role has on an object. Examples could include CONNECT, EXECUTE, SELECT
                  DELETE, INSERT, ALTER, CONTROL, TAKE OWNERSHIP, VIEW DEFINITION, etc.
                  This value may not be populated for all roles.  Some built in roles have implicit permission
                  definitions.
PermissionState : Reflects the state of the permission type, examples could include GRANT, DENY, etc.
                  This value may not be populated for all roles.  Some built in roles have implicit permission
                  definitions.
ObjectType      : Type of object the user/role is assigned permissions on.  Examples could include USER_TABLE, 
                  SQL_SCALAR_FUNCTION, SQL_INLINE_TABLE_VALUED_FUNCTION, SQL_STORED_PROCEDURE, VIEW, etc.   
                  This value may not be populated for all roles.  Some built in roles have implicit permission
                  definitions.          
ObjectName      : Name of the object that the user/role is assigned permissions on.  
                  This value may not be populated for all roles.  Some built in roles have implicit permission
                  definitions.
ColumnName      : Name of the column of the object that the user/role is assigned permissions on. This value
                  is only populated if the object is a table, view or a table value function.                 
*/

SELECT  distinct
   
    [DatabaseUserName] = memberprinc.[name],   
	[DatabaseName] = DB_NAME(),
    [Role] = roleprinc.[name], 
	[Schema] = QUOTENAME(SCHEMA_NAME(obj.schema_id)),     
    [PermissionType] = perm.[permission_name],       
    [PermissionState] = perm.[state_desc],       
    [ObjectType] = obj.type_desc,--perm.[class_desc],   
    [ObjectName] = OBJECT_NAME(perm.major_id),
    [ColumnName] = col.[name]
FROM    
    --Role/member associations
    sys.database_role_members members
JOIN
    --Roles
    sys.database_principals roleprinc ON roleprinc.[principal_id] = members.[role_principal_id]
JOIN
    --Role members (database users)
    sys.database_principals memberprinc ON memberprinc.[principal_id] = members.[member_principal_id]
LEFT JOIN
    --Login accounts
    sys.login_token ulogin on memberprinc.[sid] = ulogin.[sid]
LEFT JOIN        
    --Permissions
    sys.database_permissions perm ON perm.[grantee_principal_id] = roleprinc.[principal_id]
LEFT JOIN
    --Table columns
    sys.columns col on col.[object_id] = perm.major_id 
                    AND col.[column_id] = perm.[minor_id]
LEFT JOIN
    sys.objects obj ON perm.[major_id] = obj.[object_id]
	where memberprinc.[name] in  (
	
	 'PINERIVERCAPITA\activebatch_prod_age'
,'PINERIVERCAPITA\Andy.Arnott'
,'PINERIVERCAPITA\CMTProdSvc'
,'PINERIVERCAPITA\cpssvc'
,'PINERIVERCAPITA\david.raskin'
,'PINERIVERCAPITA\EDMSProdSvc'
,'PINERIVERCAPITA\GenevaProdSvc'
,'PINERIVERCAPITA\IIS_PROD_InstClass'
,'PINERIVERCAPITA\InstClassProdSvc'
,'PINERIVERCAPITA\ModelDevSvc'
,'PINERIVERCAPITA\PerfDashboardProdSvc'
,'PINERIVERCAPITA\prcrisk'
,'PINERIVERCAPITA\prcSQLSentryProd'
,'PINERIVERCAPITA\Randall.Brett'
,'PINERIVERCAPITA\SearchProdSvc'
,'PINERIVERCAPITA\shu.guo'
,'PINERIVERCAPITA\sql_prod_everestDAL'
,'PINERIVERCAPITA\sql_prod_pricingDAL'
,'PINERIVERCAPITA\Tao.Jin'
,'PINERIVERCAPITA\WebPricerProdSvc'	)


--OBJECT LEVEL PERMISSION--

SELECT  
       [DatabaseUserName] = QUOTENAME(USER_NAME(usr.principal_id)) COLLATE database_default,
	   [DatabaseName] = DB_NAME(),
	    [Role] = null,
		 [Schema] = QUOTENAME(SCHEMA_NAME(obj.schema_id)),
	   [PermissionType] = perm.permission_name ,
	   [PermissionState] = perm.[state_desc],
	  
	          
	    [ObjectType] = obj.type_desc,--perm.[class_desc],   
	    [ObjectName] = QUOTENAME(obj.name) --select, execute, etc on specific objects
        ,[ColumnName]  =  QUOTENAME(cl.name) 
                
FROM    
    sys.database_permissions AS perm
        INNER JOIN
    sys.objects AS obj
            ON perm.major_id = obj.[object_id]
        INNER JOIN
    sys.database_principals AS usr
            ON perm.grantee_principal_id = usr.principal_id
			INNER JOIN 
	sys.database_role_members members
			ON members.[member_principal_id] = usr.principal_id
		inner JOIN
    --Roles
    sys.database_principals roleprinc ON roleprinc.[principal_id] = members.[role_principal_id]
        LEFT JOIN
    sys.columns AS cl
            ON cl.column_id = perm.minor_id AND cl.[object_id] = perm.major_id
WHERE usr.name in (

'PINERIVERCAPITA\activebatch_prod_age'
,'PINERIVERCAPITA\Andy.Arnott'
,'PINERIVERCAPITA\CMTProdSvc'
,'PINERIVERCAPITA\cpssvc'
,'PINERIVERCAPITA\david.raskin'
,'PINERIVERCAPITA\EDMSProdSvc'
,'PINERIVERCAPITA\GenevaProdSvc'
,'PINERIVERCAPITA\IIS_PROD_InstClass'
,'PINERIVERCAPITA\InstClassProdSvc'
,'PINERIVERCAPITA\ModelDevSvc'
,'PINERIVERCAPITA\PerfDashboardProdSvc'
,'PINERIVERCAPITA\prcrisk'
,'PINERIVERCAPITA\prcSQLSentryProd'
,'PINERIVERCAPITA\Randall.Brett'
,'PINERIVERCAPITA\SearchProdSvc'
,'PINERIVERCAPITA\shu.guo'
,'PINERIVERCAPITA\sql_prod_everestDAL'
,'PINERIVERCAPITA\sql_prod_pricingDAL'
,'PINERIVERCAPITA\Tao.Jin'
,'PINERIVERCAPITA\WebPricerProdSvc'
)
--ORDER BY perm.permission_name ASC, perm.state_desc ASC

-- SCHEMA LEVEL PERMISSIONS --

SELECT  
   [DatabaseUserName] = (USER_NAME(grantee_principal_id)) COLLATE database_default,
   [DatabaseName] = DB_NAME(),
	 [Role] = null,
           [Schema] = QUOTENAME(SCHEMA_NAME(major_id)),
             [PermissionType] = perm.permission_name,
			 [PermissionState] = perm.[state_desc],
			 [ObjectType] = NULL,   
	    [ObjectName] = NULL
        ,[ColumnName]  =  NULL
             
from sys.database_permissions AS perm
    inner join sys.schemas s
        on perm.major_id = s.schema_id
    inner join sys.database_principals dbprin
        on perm.grantee_principal_id = dbprin.principal_id
WHERE class = 3 --class 3 = schema 
and user_name(grantee_principal_id) in (

	 'PINERIVERCAPITA\activebatch_prod_age'
,'PINERIVERCAPITA\Andy.Arnott'
,'PINERIVERCAPITA\CMTProdSvc'
,'PINERIVERCAPITA\cpssvc'
,'PINERIVERCAPITA\david.raskin'
,'PINERIVERCAPITA\EDMSProdSvc'
,'PINERIVERCAPITA\GenevaProdSvc'
,'PINERIVERCAPITA\IIS_PROD_InstClass'
,'PINERIVERCAPITA\InstClassProdSvc'
,'PINERIVERCAPITA\ModelDevSvc'
,'PINERIVERCAPITA\PerfDashboardProdSvc'
,'PINERIVERCAPITA\prcrisk'
,'PINERIVERCAPITA\prcSQLSentryProd'
,'PINERIVERCAPITA\Randall.Brett'
,'PINERIVERCAPITA\SearchProdSvc'
,'PINERIVERCAPITA\shu.guo'
,'PINERIVERCAPITA\sql_prod_everestDAL'
,'PINERIVERCAPITA\sql_prod_pricingDAL'
,'PINERIVERCAPITA\Tao.Jin'
,'PINERIVERCAPITA\WebPricerProdSvc'
)


