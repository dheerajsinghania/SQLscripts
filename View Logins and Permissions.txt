SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO

--Drop table [tempdb].[dbo].[DB_ROLES]
 
-- CREATING A TEMP TABLE TO LOAD WITH DATABASE ROLES
CREATE TABLE [tempdb].[dbo].[DB_ROLES](
      [DBNAME] [sysname],
      [USERNAME] [sysname] ,
      [DB_OWNER] [VARCHAR](3) ,
      [DB_ACCESSADMIN] [VARCHAR](3) ,
      [DB_SECURITYADMIN] [VARCHAR](3) ,
      [DB_DDLADMIN] [VARCHAR](3) ,
      [DB_DATAREADER] [VARCHAR](3) ,
      [DB_DATAWRITER] [VARCHAR](3) ,
      [DB_DENYDATAREADER] [VARCHAR](3) ,
      [DB_DENYDATAWRITER] [VARCHAR](3) ,
      [DT_CREATE] [DATETIME] NOT NULL,
      [DT_UPDATE] [DATETIME] NOT NULL,
      [DT_REPORT] [DATETIME] NOT NULL CONSTRAINT [DF__DBROLES__CUR_DAT__3A179ED3]  DEFAULT (GETDATE())
) ON [PRIMARY]
GO
 
INSERT INTO    [tempdb].[dbo].[DB_ROLES]
EXEC sp_MSforeachdb
'     SELECT 
    ''?'' AS DBNAME,
      USERNAME,
     MAX(CASE ROLENAME WHEN ''DB_OWNER''         THEN ''YES'' ELSE ''NO'' END) AS DB_OWNER,
       MAX(CASE ROLENAME WHEN ''DB_ACCESSADMIN ''   THEN ''YES'' ELSE ''NO'' END) AS DB_ACCESSADMIN ,
       MAX(CASE ROLENAME WHEN ''DB_SECURITYADMIN''  THEN ''YES'' ELSE ''NO'' END) AS DB_SECURITYADMIN,
       MAX(CASE ROLENAME WHEN ''DB_DDLADMIN''   THEN ''YES'' ELSE ''NO'' END) AS DB_DDLADMIN,
       MAX(CASE ROLENAME WHEN ''DB_DATAREADER''        THEN ''YES'' ELSE ''NO'' END) AS DB_DATAREADER,
       MAX(CASE ROLENAME WHEN ''DB_DATAWRITER''        THEN ''YES'' ELSE ''NO'' END) AS DB_DATAWRITER,
     MAX(CASE ROLENAME WHEN ''DB_DENYDATAREADER'' THEN ''YES'' ELSE ''NO'' END) AS DB_DENYDATAREADER,
       MAX(CASE ROLENAME WHEN ''DB_DENYDATAWRITER'' THEN ''YES'' ELSE ''NO'' END) AS DB_DENYDATAWRITER,
       CREATEDATE,
     UPDATEDATE,
       GETDATE()
       FROM (
       SELECT B.NAME AS USERNAME, C.NAME AS ROLENAME, B.CREATEDATE, B.UPDATEDATE
            FROM   
                    [?].dbo.sysmembers A   JOIN [?].dbo.sysusers  B  ON A.MEMBERUID = B.UID
                        JOIN [?].dbo.sysusers C ON A.GROUPUID = C.UID 
                        )S   
               GROUP BY USERNAME, CREATEDATE, UPDATEDATE
         ORDER BY USERNAME'
 
-- RETRIVE LOGINS, USERS AND ROLES TOGETHER
SELECT  SERVERPROPERTY('SERVERNAME') AS [SERVERNAME],
B.NAME AS [LOGINNAME],
CASE B.SYSADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS SYSADMIN,
CASE B.SECURITYADMIN WHEN '1' THEN 'YES' ELSE 'NO' END AS SECURITYADMIN,
CASE B.SETUPADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS SETUPADMIN,
CASE B.PROCESSADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS PROCESSADMIN,
CASE B.DISKADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS DISKADMIN,
CASE B.DBCREATOR  WHEN '1' THEN 'YES' ELSE 'NO' END AS DBCREATOR,
CASE B.BULKADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS BULKADMIN,
B.DBNAME AS [DEFAULT_DBNAME],
A.* INTO #LOGINS FROM [tempdb].[dbo].[DB_ROLES] A RIGHT JOIN master..syslogins B ON A.USERNAME=B.NAME
--WHERE B.ISNTUSER=1  --INCLUDE TO EXCLUDE THE SQL LOGINS
 
SELECT * FROM #LOGINS ORDER BY [LOGINNAME] 
 
DROP TABLE  [tempdb].[dbo].[DB_ROLES]
 
DROP TABLE  #LOGINS
 
--------------SCRIPT END-----------------------
